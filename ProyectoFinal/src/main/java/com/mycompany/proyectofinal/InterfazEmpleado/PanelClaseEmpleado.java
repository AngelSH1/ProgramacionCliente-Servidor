package com.mycompany.proyectofinal.InterfazEmpleado;

import com.mycompany.proyectofinal.InfoClase;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * Proyecto creado por Dabney Arosemena Alpízar / Daniel Gilberto Picado Urbina / Angel Salmeron Hernández
 */
public class PanelClaseEmpleado extends javax.swing.JPanel {

    /**
     * Creates new form clase
     */
    public PanelClaseEmpleado() {
        initComponents();
        llenarTabla();
        desabilitados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TablaInstructores = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        CrearNuevaClase = new javax.swing.JLabel();
        rbNuevaClase = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        Actualizar = new javax.swing.JLabel();
        rbAcutalizar = new javax.swing.JRadioButton();
        btnEliminar = new javax.swing.JButton();
        txtNombreClase = new javax.swing.JLabel();
        txtNombreClase2 = new javax.swing.JTextField();
        txtDesc = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        txtCupoMax = new javax.swing.JLabel();
        txtCupoMaximo = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        FondoPeq = new javax.swing.JLabel();
        lbid = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID CLASE", "NOMBRE DE CLASE", "DESCRIPCION", "CUPO MAXIMO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla1.getTableHeader().setReorderingAllowed(false);
        TablaInstructores.setViewportView(tabla1);

        add(TablaInstructores, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 647, 380));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CrearNuevaClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Crear Nueva Clase.png"))); // NOI18N
        jPanel1.add(CrearNuevaClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        rbNuevaClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNuevaClaseActionPerformed(evt);
            }
        });
        jPanel1.add(rbNuevaClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 14, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 153, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Boton Seleccionar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 12, 120, 30));

        Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Actualizar.png"))); // NOI18N
        jPanel1.add(Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 70, -1));

        rbAcutalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAcutalizarActionPerformed(evt);
            }
        });
        jPanel1.add(rbAcutalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 52, -1, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Boton Eliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 50, 100, 30));

        txtNombreClase.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        txtNombreClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Nombre Clase.png"))); // NOI18N
        jPanel1.add(txtNombreClase, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        jPanel1.add(txtNombreClase2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 132, 290, 30));

        txtDesc.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        txtDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Descripción.png"))); // NOI18N
        jPanel1.add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 290, 30));

        txtCupoMax.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        txtCupoMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Cupo Maximo.png"))); // NOI18N
        jPanel1.add(txtCupoMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));
        jPanel1.add(txtCupoMaximo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 290, 30));

        btnRegistrar.setBackground(new java.awt.Color(246, 104, 68));
        btnRegistrar.setFont(new java.awt.Font("Eras Demi ITC", 0, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Boton Registrar_.png"))); // NOI18N
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 140, 40));

        FondoPeq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Fondo.png"))); // NOI18N
        jPanel1.add(FondoPeq, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 380));
        jPanel1.add(lbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 40, 50));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 40, -1, 380));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/imagenes/Fondo.png"))); // NOI18N
        add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 450));
    }// </editor-fold>//GEN-END:initComponents

    private void rbNuevaClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNuevaClaseActionPerformed
        // TODO add your handling code here:
        if (rbNuevaClase.isSelected()) {
            limpiar();
            rbAcutalizar.setSelected(false);
            habilitado();
        }
    }//GEN-LAST:event_rbNuevaClaseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tabla1.getSelectedRow();
        if (filaSeleccionada != -1) {
            // Obtener los valores de la fila seleccionada
            int idClase = (int) tabla1.getValueAt(filaSeleccionada, 0);
            String nombre = (String) tabla1.getValueAt(filaSeleccionada, 1);
            String descripcion = (String) tabla1.getValueAt(filaSeleccionada, 2);
            int cupoMaximo = (int) tabla1.getValueAt(filaSeleccionada, 3);
            lbid.setText(String.valueOf(idClase));
            txtNombreClase2.setText(nombre);
            txtDescripcion.setText(descripcion);
            txtCupoMaximo.setText(String.valueOf(cupoMaximo));
        } else {
            // Si no hay fila seleccionada, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Selecciona una fila Para Acutalizar.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rbAcutalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAcutalizarActionPerformed
        // TODO add your handling code here:
        if (rbAcutalizar.isSelected()) {
            rbNuevaClase.setSelected(false);
            habilitado();
        }
    }//GEN-LAST:event_rbAcutalizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tabla1.getSelectedRow();
        if (filaSeleccionada != -1) {
            // Obtener los valores de la fila seleccionada
            int idClase = (int) tabla1.getValueAt(filaSeleccionada, 0);
            int opcion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar este registro?",
                "Confirmación de eliminación", JOptionPane.YES_NO_OPTION);

            if (opcion == JOptionPane.YES_OPTION) {
                infoclase.eliminarClase(idClase);
                llenarTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Eliminación cancelada.");
            }
        } else {
            // Si no hay fila seleccionada, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Selecciona una fila Para Eliminar.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed

        try {
            if (rbNuevaClase.isSelected()) {
                insertaDatos();
            } else if (rbAcutalizar.isSelected()) {
                ModificarDatos();
            } else {
                JOptionPane.showMessageDialog(null, "Debe Selecionar una Accion");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Actualizar;
    private javax.swing.JLabel CrearNuevaClase;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel FondoPeq;
    private javax.swing.JScrollPane TablaInstructores;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbid;
    private javax.swing.JRadioButton rbAcutalizar;
    private javax.swing.JRadioButton rbNuevaClase;
    private javax.swing.JTable tabla1;
    private javax.swing.JLabel txtCupoMax;
    private javax.swing.JTextField txtCupoMaximo;
    private javax.swing.JLabel txtDesc;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JLabel txtNombreClase;
    private javax.swing.JTextField txtNombreClase2;
    // End of variables declaration//GEN-END:variables
InfoClase infoclase = new InfoClase();

    public void llenarTabla() {
        InfoClase f = new InfoClase();
        try {
            // Llamar a la función consultarTodos() de FuncionesEstudiante
            DefaultTableModel model = f.consultarTodosParaTabla();

            // Actualizar la tabla con los datos obtenidos de la consulta
            tabla1.setModel(model);
        } catch (SQLException ex) {
            ex.printStackTrace();
            // Aquí puedes agregar algún mensaje de error en caso de que ocurra un problema con la consulta
        }
    }

    public void insertaDatos() {
        try {
            String nombre = txtNombreClase2.getText();
            String descripcion = txtDescripcion.getText();
            int cupo = Integer.parseInt(txtCupoMaximo.getText());
            int opcion = JOptionPane.showConfirmDialog(null, "¿Esta seguro de insertar estos datos?",
                    "Confirmación de inserción", JOptionPane.YES_NO_OPTION);
            if (opcion == JOptionPane.YES_OPTION) {
                infoclase.insertarClase(nombre, descripcion, cupo);
                llenarTabla();
                limpiar();
                JOptionPane.showMessageDialog(null, "Registro Insertado");
            } else {
                JOptionPane.showMessageDialog(null, "Inserción cancelada.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Formato de datos no valido");
            e.printStackTrace();
        }
    }

    public void ModificarDatos() {
        try {
            String nombre = txtNombreClase2.getText();
            String descripcion = txtDescripcion.getText();
            int cupo = Integer.parseInt(txtCupoMaximo.getText());
            int id = Integer.parseInt(lbid.getText());
            int opcion = JOptionPane.showConfirmDialog(null, "¿Esta seguro de actualizar estos datos?",
                    "Confirmación de actualización", JOptionPane.YES_NO_OPTION);

            if (opcion == JOptionPane.YES_OPTION) {
                infoclase.modificarClase(nombre, descripcion, cupo, id);
                llenarTabla();
                limpiar();
                JOptionPane.showMessageDialog(null, "Registro Actualizado");
            } else {
                JOptionPane.showMessageDialog(null, "Actualización cancelada.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Formato de datos no valido");
            e.printStackTrace();
        }
    }

    public void limpiar() {
        lbid.setText(String.valueOf(0));
        txtNombreClase2.setText("");
        txtDescripcion.setText("");
        txtCupoMaximo.setText(String.valueOf(""));
    }

    public void desabilitados() {
        lbid.setText(String.valueOf(0));
        txtNombreClase2.setEnabled(false);
        txtDescripcion.setEnabled(false);
        txtCupoMaximo.setEnabled(false);
        btnRegistrar.setEnabled(false);
        btnEliminar.setEnabled(true);

    }

    public void habilitado() {
        txtNombreClase2.setEnabled(true);
        txtDescripcion.setEnabled(true);
        txtCupoMaximo.setEnabled(true);
        btnRegistrar.setEnabled(true);
        btnEliminar.setEnabled(true);
    }

}

